# This workflow will build a Swift project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-swift

name: Swift (iOS)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  SCHEME: CrewClock

jobs:
  build-and-test:
    runs-on: macos-14
    steps:
      - uses: actions/checkout@v4

      - name: Select Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: "16.*"

      - name: Cache SwiftPM
        uses: actions/cache@v4
        with:
          path: |
            ~/Library/Developer/Xcode/DerivedData
            ~/Library/Caches/org.swift.swiftpm
          key: ${{ runner.os }}-spm-${{ hashFiles('**/Package.resolved') }}
          restore-keys: |
            ${{ runner.os }}-spm-

      - name: Detect Xcode container (workspace or project) and list schemes
        id: detect
        shell: bash
        run: |
          set -e
          if ls *.xcworkspace >/dev/null 2>&1; then
            echo "CONTAINER_TYPE=workspace" >> $GITHUB_ENV
            echo "CONTAINER_NAME=$(ls -1 *.xcworkspace | head -n1)" >> $GITHUB_ENV
          elif ls *.xcodeproj >/dev/null 2>&1; then
            echo "CONTAINER_TYPE=project" >> $GITHUB_ENV
            echo "CONTAINER_NAME=$(ls -1 *.xcodeproj | head -n1)" >> $GITHUB_ENV
          elif ls *.pbxproj >/dev/null 2>&1; then
            # Last-resort support if only project.pbxproj is present
            echo "CONTAINER_TYPE=project" >> $GITHUB_ENV
            echo "CONTAINER_NAME=$(ls -1 *.pbxproj | head -n1)" >> $GITHUB_ENV
          else
            echo "No .xcworkspace, .xcodeproj, or .pbxproj found at repo root"; exit 1
          fi
          echo "Detected $CONTAINER_TYPE: $CONTAINER_NAME"
          xcodebuild -list -json -$CONTAINER_TYPE "$CONTAINER_NAME" || true

      - name: Build + Test (Simulator)
        shell: bash
        run: |
          set -e
          echo "Using $CONTAINER_TYPE: $CONTAINER_NAME"
          # Try to run tests (singular). If the scheme has no tests, fall back to just build.
          if xcodebuild -$CONTAINER_TYPE "$CONTAINER_NAME" -scheme "$SCHEME" -destination 'platform=iOS Simulator,name=iPhone 15' CODE_SIGNING_ALLOWED=NO clean build test; then
            echo "Build + test succeeded."
          else
            echo "No test action or tests failed; attempting build only..."
            xcodebuild -$CONTAINER_TYPE "$CONTAINER_NAME" -scheme "$SCHEME" -destination 'platform=iOS Simulator,name=iPhone 15' CODE_SIGNING_ALLOWED=NO clean build
          fi
