# This workflow will build a Swift project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-swift

name: Swift (iOS)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  SCHEME: CrewClock   # change if your scheme is named differently

jobs:
  build-and-test:
    runs-on: macos-14
    steps:
      - uses: actions/checkout@v4

      - name: Select Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: "16.*"

      - name: Cache SwiftPM
        uses: actions/cache@v4
        with:
          path: |
            ~/Library/Developer/Xcode/DerivedData
            ~/Library/Caches/org.swift.swiftpm
          key: ${{ runner.os }}-spm-${{ hashFiles('**/Package.resolved') }}
          restore-keys: |
            ${{ runner.os }}-spm-

      - name: Locate Xcode project/workspace
        id: locate
        run: |
          set -e
          if ls *.xcworkspace >/dev/null 2>&1; then
            echo "CONTAINER_TYPE=workspace" >> $GITHUB_ENV
            echo "CONTAINER_PATH=$(ls -1 *.xcworkspace | head -n1)" >> $GITHUB_ENV
          elif ls *.xcodeproj >/dev/null 2>&1; then
            echo "CONTAINER_TYPE=project" >> $GITHUB_ENV
            echo "CONTAINER_PATH=$(ls -1 *.xcodeproj | head -n1)" >> $GITHUB_ENV
          else
            echo "No .xcworkspace or .xcodeproj found"; exit 1
          fi
          echo "Found $CONTAINER_TYPE: $CONTAINER_PATH"

      - name: List schemes
        run: |
          xcodebuild -list -json -$CONTAINER_TYPE "$CONTAINER_PATH" || true

      - name: Build + Test (Simulator)
        run: |
          set -e
          echo "Building $SCHEME from $CONTAINER_PATH"
          if xcodebuild -$CONTAINER_TYPE "$CONTAINER_PATH" \
                        -scheme "$SCHEME" \
                        -configuration Debug \
                        -destination 'platform=iOS Simulator,name=iPhone 15' \
                        CODE_SIGNING_ALLOWED=NO \
                        clean build test; then
            echo "Build + test succeeded"
          else
            echo "No test action or tests failed; attempting build only..."
            xcodebuild -$CONTAINER_TYPE "$CONTAINER_PATH" \
                       -scheme "$SCHEME" \
                       -configuration Debug \
                       -destination 'platform=iOS Simulator,name=iPhone 15' \
                       CODE_SIGNING_ALLOWED=NO \
                       clean build
          fi
